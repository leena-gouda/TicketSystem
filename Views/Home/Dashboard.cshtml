@model DashboardModel

@{
    // var firstTicketId = Model.callerIncidents.FirstOrDefault()?.Ticket?.Id
    //         ?? Model.WatcherIncidents.FirstOrDefault()?.Ticket?.Id;
    //var incidentToReview = Model.PendingIncident;
   
}
@* <style>
    body {
        background-color: #f4f9ff;
        font-family: 'Segoe UI', sans-serif;
        color: #333;
    }

    /* Primary button */
    .btn-blue {
        background-color: #1a73e8;
        color: #fff;
        border: none;
    }

        .btn-blue:hover {
            background-color: #155ab6;
        }

    /* Card styling */
    .card {
        border: none;
        box-shadow: 0 0 10px rgba(0,0,0,0.05);
    }

    .card-header {
        background-color: #1a73e8;
        color: #fff;
        font-weight: bold;
    }

    /* Info alert */
    .alert-info {
        background-color: #dbeefe;
        border-left: 4px solid #1a73e8;
        color: #1a73e8;
    }

    /* Select box */
    .form-select {
        border-color: #1a73e8;
    }

    .text-welcome {
        color: #1a73e8;
    }

</style> *@


@Html.Raw(@"<style>
    :root {
        --nude-bg: #fdf8f3;
        --nude-surface: #fff;
        --nude-accent: #d4b49e;
        --nude-accent-hover: #c6a086;
        --nude-text: #5a4a3f;
        --nude-muted: #a89b90;
        --nude-border: #e3d6cb;
        --nude-shadow: rgba(0, 0, 0, 0.06);
    }

    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    body {
        background-color: var(--nude-bg);
        font-family: 'Lora', serif;
        color: var(--nude-text);
    }

    .btn-nude {
        background-color: var(--nude-accent);
        color: #fff;
        padding: 0.6rem 1.2rem;
        border-radius: 0.375rem;
        font-size: 1rem;
        border: none;
        transition: background-color 0.3s ease, box-shadow 0.3s ease;
    }

        .btn-nude:hover {
            background-color: var(--btn-hover);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

    .btn-outline-nude {
        border: 2px solid var(--nude-primary);
        color: var(--nude-primary);
        background-color: transparent;
        padding: 0.6rem 1.2rem;
        border-radius: 0.375rem;
        transition: all 0.3s ease;
    }

        .btn-outline-nude:hover {
            background-color: var(--nude-light);
            box-shadow: inset 0 0 0 1000px rgba(212,180,158,0.05);
        }

    .card {
        border: none;
        background-color: #fff;
        box-shadow: 0 4px 12px var(--card-shadow);
        border-radius: 0.75rem;
    }

    .card-header {
        background-color: var(--nude-accent);
        color: #fff;
        font-weight: 600;
        border-radius: 0.75rem 0.75rem 0 0;
        padding: 1rem;
    }

    .alert-info {
        background-color: #f1e6de;
        border-left: 4px solid var(--nude-accent);
        color: var(--nude-text);
        padding: 1rem;
        border-radius: 0.5rem;
    }

    .form-select {
        border-color: var(--nude-accent);
        background-color: #fff;
        color: var(--nude-text);
        border-radius: 0.375rem;
    }

    .text-welcome {
        color: var(--nude-accent);
        font-weight: 500;
        letter-spacing: 0.5px;
    }
    .modal-bottom {
      position: fixed;
      bottom: 2rem;
      left: 50%;
      transform: translateX(-50%);
      max-width: 500px;
      width: 90%;
      z-index: 1050;
    }
    @keyframes riseFromBottom {
        0%

    {
        opacity: 0;
        transform: translateY(50px);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }

    }

    #feedbackModal .modal-dialog {
        animation: riseFromBottom 0.6s ease-out;
    }
</style>")


<div class="d-flex justify-content-between align-items-center mt-4 mb-3">
    <h2 class="text-welcome">Hello @ViewBag.username</h2>
    
    @if (Model.IsCaller && Model.callerIncidents.Any())
    {
        <a href="@Url.Action("MyIncidents", "Home")" class="btn btn-nude rounded-pill px-4">
            <i class="fas fa-clipboard-list"></i> Caller Incidents History
        </a>
    }
</div>

@* <h2 class="text-welcome">Hello @ViewBag.username</h2> *@
<div class="container mt-4">

    <div class="mb-3">
         <form asp-action="Search" method="get" class="row gx-2">
             <div class="col">
                <input type="text" id="incidentInput" name="incidentId" placeholder="Enter Incident ID" class="form-control" oninput="toggleSearchButton()"/>
             </div>            
             <div class="col-auto">
                <button type="submit" id="searchButton" class="btn btn-nude rounded-pill px-4" style="display:none;">Search</button>
             </div>        
         </form>
        @if (TempData["SearchError"] != null)
        {
            <div class="alert alert-warning mt-2">@TempData["SearchError"]</div>
        }
    </div

    @section Scripts 
    {
        <script>
            function toggleSearchButton() {
                const input = document.getElementById("incidentInput");
                const button = document.getElementById("searchButton");
                button.style.display = input.value.trim() ? "inline-block" : "none";
            }
        </script>
    } 

    <div class="mb-3">
        @* @if(Model.IsCaller && Model.callerIncidents.Any())
        {
             <div class="d-flex justify-content-end mt-4 mb-5">
               <a href="@Url.Action("MyIncidents", "Home")" class="btn  btn-nude rounded-pill px-4">
                        <i class="fas fa-clipboard-list"></i> Caller Incidents History
               </a>
            </div>
        } *@
        <div class="mb-3">
            <a asp-action="Index" class="btn btn-nude">Create New Ticket</a>
            @if (ViewBag.TicketId != null && (int)ViewBag.TicketId > 0)
            {
                <a href="@Url.Action("Incident", "Home", new { id = ViewBag.TicketId, tickid = ViewBag.TicketId })" class="btn btn-nude">
                    Create Incident
                </a>
        
            }
            else
            {
                <span class="text-muted">No valid ticket available to create incident.</span>
        
            }
        </div>
        @* <a asp-action="Incident" class="btn btn-info">Open New Incident</a> *@
        
        

        @if (ViewBag.userRole == "Manager")
        {
            
            <a href="@Url.Action("IncidentAssignList", "Home")" class="btn btn-nude">
                Assign Admins
            </a>
            @* <div class="text-center mt-3">
                <a href="@Url.Action("IncidentAssignList", "Home")" class="btn btn-nude">
                    View Unassigned Incidents
                </a>
            </div> *@
        }


        @if (Model.IncidentsToReview != null && Model.IncidentsToReview.caller != null && Model.IncidentsToReview.caller.LoginId == ViewBag.userId)
        {
            <div id="feedbackModal" class="modal show" tabindex="-1" style="display:block; background-color: rgba(0,0,0,0.4);">
                <div class="modal-dialog  modal-botttom" style="animation: riseFromBottom 0.6s ease-out;">
                    <div class="modal-content" style="border-radius: 0.75rem; border: 1px solid var(--nude-border); box-shadow: 0 8px 16px var(--nude-shadow); background-color: var(--nude-surface);">
                        <div class="modal-header" style="background-color: var(--nude-accent); border-bottom: none; color: #fff;">
                            <h5 class="modal-title">Incident Feedback</h5>
                        </div>
                        <div class="modal-body" style="color: var(--nude-text); font-family: 'Lora', serif;">
                            <p>Do you accept or reject this incident assignment?</p>
                        </div>
                        <div class="modal-footer" style="border-top: none;">
                            <form asp-action="CallerFeedback" method="post" class="d-flex w-100 justify-content-around">
                                <input type="hidden" name="incidentId" value="@Model.IncidentsToReview.Id" />
                                <button name="accepted" value="true" type="submit" class="btn btn-nude">Accept</button>
                                <button name="accepted" value="false" type="submit" class="btn btn-outline-nude">Reject</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }

        @* <div class="card mb-4 shadow-sm">
            <div class="card-body">
                <h5 class="card-title card-header bg-info text-white fw-bold">Ticket Tools</h5>

                <div class="d-flex flex-wrap gap-2">
                    <a asp-action="Index" class="btn btn">
                        <i class="fas fa-plus me-1"></i> Create New Ticket
                    </a>

                    @if (ViewBag.TicketId != null && (int)ViewBag.TicketId > 0)
                    {
                        <a href="@Url.Action("Incident", "Home", new { id = ViewBag.TicketId })" class="btn btn-info">
                            <i class="fas fa-exclamation-circle me-1"></i> Create Incident
                        </a>
                    }
                    else
                    {
                        <span class="text-muted align-self-center">
                            <i class="fas fa-ban me-1"></i> No valid ticket available for incident.
                        </span>
                    }
                </div>
            </div>
        </div> *@


        @* <p class="fw-bold text-primary">
            You are a:
            @(Model.IsCaller && Model.IsWatcher ? "Caller and Watcher" :
                        Model.IsCaller ? "Caller" :
                        Model.IsWatcher ? "Watcher" :
                        "")
        </p> *@

        <div class="alert alert-info fw-bold mb-4">
            <i class="fas fa-user-check me-2 text-primary"></i>
            You are a:
            <span class="text-primary">
                @(Model.IsCaller && Model.IsWatcher ? "Caller and Watcher" :
                                Model.IsCaller ? "Caller" :
                                Model.IsWatcher ? "Watcher" : "Unassigned")
            </span>
        </div>

         

        @if (Model.IsCaller && Model.callerIncidents.Any())
        {
            <div class="card mb-4 shadow-sm">
                <div class="card-header">
                    Your Caller Incidents
                </div>
                @* <div class="text-center mt-4 mb-5">
                   <a href="@Url.Action("MyIncidents", "Home")" class="btn  btn-nude rounded-pill px-4">
                            <i class="fas fa-clipboard-list"></i> My Incidents
                   </a>
                </div> *@
                <div class="card-body">
                    <form asp-controller="Home" asp-action="IncidentDetail" method="get">
                        <label class="form-label">Select an incident:</label>
                        <div class="input-group">
                            <select name="incidentId" class="form-select">
                                <option disabled selected value="">Choose one...</option>
                                @foreach (var incident in Model.callerIncidents)
                                {
                                    <option value="@incident.Id">
                                        Incident #@incident.Id – Ticket #@incident.Ticket?.Id – @incident.State
                                    </option>
                                }
                            </select>
                            <button type="submit" class="btn btn-nude">Open Incident</button>
                        </div>
                    </form>

                </div>
            </div>

        }


        @if (Model.IsWatcher && Model.WatcherIncidents.Any())
        {
            <div class="card mb-4 shadow-sm">
                <div class="card-header">
                    Your Watcher Incidents
                </div>
                <div class="card-body">
                    <form asp-controller="Home" asp-action="IncidentDetail" method="get">
                        <label class="form-label">Select an incident:</label>
                        <div class="input-group">
                            <select name="incidentId" class="form-select">
                                <option disabled selected value="">Choose one...</option>
                                @foreach (var incident in Model.WatcherIncidents)
                                {
                                    <option value="@incident.Id">
                                        Incident #@incident.Id – Ticket #@incident.Ticket?.Id – @incident.State
                                    </option>
                                }
                            </select>
                            <button type="submit" class="btn btn-nude">Open Incident</button>
                        </div>
                    </form>

                </div>
            </div>

        }

        @* @if (Model.IsCaller && Model.callerIncidents.Any())
        {
            <h3>Your Caller Incidents:</h3>
            @* <ul>
                @foreach (var incident in Model.callerIncidents)
                {
                    Console.WriteLine($"Incident ID: {incident.Id}");
                    <li>
                        <a asp-action="IncidentDetail" asp-route-incidentId="@incident.Id">
                            Incident #@incident.Id – State: @incident.State
                        </a>
                    </li>
                }
            </ul> 
            <form asp-controller="Home" asp-action="IncidentDetail" method="get">
                <label class="form-label fw-bold">Select an incident:</label>
                <select name="incidentId" class="form-select mb-3">
                    @foreach (var incident in Model.callerIncidents)
                    {
                        <option value="@incident.Id">
                            Incident #@incident.Id – Ticket #@incident.Ticket?.Id – @incident.State
                        </option>
                    }
                </select>
                <button type="submit" class="btn btn-outline-primary">Open Incident</button>
            </form>

        } *@
        


        @* @if (Model.IsCaller && Model.callerIncidents.Any())
        {
            <h3>Your Caller Incidents:</h3>
            @* <ul>
                @foreach (var incident in Model.callerIncidents)
                {
                    Console.WriteLine($"Incident ID: {incident.Id}");
                    <li>
                        <a asp-action="IncidentDetail" asp-route-incidentId="@incident.Id">
                            Incident #@incident.Id – State: @incident.State
                        </a>
                    </li>
                }
            </ul> 
            <form asp-controller="Home" asp-action="IncidentDetail" method="get">
                <label class="form-label fw-bold">Select an incident:</label>
                <select name="incidentId" class="form-select mb-3">
                    @foreach (var incident in Model.callerIncidents)
                    {
                        <option value="@incident.Id">
                            Incident #@incident.Id – Ticket #@incident.Ticket?.Id – @incident.State
                        </option>
                    }
                </select>
                <button type="submit" class="btn btn-outline-primary">Open Incident</button>
            </form>

        } *@
        
        
        @* @if (Model.IsWatcher && Model.WatcherIncidents.Any()) 
        {
            <h3>Your Watched Incidents:</h3>

            @* <ul>
                @foreach (var incident in Model.WatcherIncidents)
                {
                    <li>
                        <a asp-action="IncidentDetail" asp-route-incidentId="@incident.Id">
                            Incident #@incident.Id – Ticket #@incident.Ticket?.Id – @incident.State
                        </a>
                    </li>
                }
            </ul> 
            <form asp-controller="Home" asp-action="IncidentDetail" method="get">
                <label class="form-label fw-bold">Select an incident:</label>
                <select name="incidentId" class="form-select mb-3">
                    @foreach (var incident in Model.WatcherIncidents)
                    {
                        <option value="@incident.Id">
                            Incident #@incident.Id – Ticket #@incident.Ticket?.Id – @incident.State
                        </option>
                    }
                </select>
                <button type="submit" class="btn btn-outline-primary">Open Incident</button>
            </form>
        }*@

        @if (!Model.IsCaller && !Model.IsWatcher)
        {
            <div class="alert alert-info">
                You haven't created or watched any incidents yet.
                <br />
            </div>
        }

        @if (ViewBag.userRole == "Admin")
        {
            <div class="card mb-4 shadow-sm">
                <div class="card-header">
                    Your Work in Progress Incidents
                </div>
                <div class="card-body">
                    <form asp-controller="Home" asp-action="MarkAsDone" method="post">
                        <label class="form-label">When finished Mark as Done</label>
                        <div class="input-group">
                            <select name="incidentId" class="form-select">
                                <option disabled selected value="">When Finished...Mark as Done</option>
                                @foreach (var incident in Model.AssignedIncidents)
                                {
                                    <option value="@incident.Id">
                                        Incident #@incident.Id – @incident.State
                                    </option>
                                }
                            </select>
                            <button type="submit" class="btn btn-nude">Done</button>
                        </div>
                    </form>

                </div>
            </div>
        }
        

        @* @if( Model.WatchedIncidents != null && Model.WatchedIncidents.Any())
        {
            @* <h3>Your Watched Incidents:</h3>
            <ul>
                @foreach (var incident in Model.WatchedIncidents)
                {
                    <li>
                        <a asp-action="IncidentDetail" asp-route-id="@incident.Id">
                            Incident #@incident.Id
                        </a>
                    </li>
                }
            </ul> *@

           
        @*         <form asp-controller="Home" asp-action="IncidentDetail" method="get">
                    <label class="form-label fw-bold">Select an existing incident:</label>
                    <select name="incidentId" class="form-select mb-3">
                        @foreach (var incident in Model.WatchedIncidents)
                        {
                            <option value="@incident.Id">
                                Incident #@incident.Id – Ticket #@incident.Ticket?.Id – @incident.State
                            </option>
                        }
                    </select>
                    <button type="submit" class="btn btn-outline-primary">Open Selected Incident</button>
                </form>
            
        }
        else
        {
            <p>You aren't watching any incidents yet.</p>
        }  *@
    </div>
</div>



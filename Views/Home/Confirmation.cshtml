@model Ticket
@{
    ViewData["Title"] = "Confirmation";
    var ticketId = Model.Id;
    // var allIncidents = ViewBag.AllIncidents as List<IncidentModel>; 
}
@* @Html.Raw(@"<style>
    .text-welcome {
        color: #1a73e8;
    }

    .btn-blue {
        background-color: #1a73e8;
        color: #fff;
        border: none;
        transition: background-color 0.3s ease;
    }

    .btn-blue:hover {
        background-color: #155ab6;
    }

    .btn-outline-blue {
        border: 2px solid #1a73e8;
        color: #1a73e8;
        background-color: transparent;
        transition: all 0.3s ease;
    }

    }

    .btn-outline-blue:hover {
        background-color: #e8f0fe;
    .card {
        border: none;
        border-radius: 0.5rem;
        box-shadow: 0 0 10px rgba(0,0,0,0.05);
    }

    .fade-in {
        animation: fadeIn 0.7s ease-in-out;
    }

    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style>") *@

@Html.Raw(@"<style>
    :root {
    --nude-bg: #fdf8f3;
    --nude-surface: #fff;
    --nude-accent: #d4b49e;
    --nude-accent-hover: #c6a086;
    --nude-text: #5a4a3f;
    --nude-muted: #a89b90;
    --nude-border: #e3d6cb;
    --nude-shadow: rgba(0, 0, 0, 0.06);
    }

    

    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }
    body {
        background-color: var(--nude-bg);
        font-family: 'Lora', serif;
        color: var(--nude-text);
    }

    .text-welcome {
        color: var(--nude-accent);
        font-weight: 500;
        letter-spacing: 0.5px;
    }
.btn-nude {
        background-color: var(--nude-accent);
        color: #fff;
        padding: 0.6rem 1.2rem;
        border-radius: 0.375rem;
        font-size: 1rem;
        border: none;
        transition: background-color 0.3s ease, box-shadow 0.3s ease;
    }

        .btn-nude:hover {
            background-color: var(--btn-hover);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

    .btn-outline-nude {
        border: 2px solid var(--nude-primary);
        color: var(--nude-primary);
        background-color: transparent;
        padding: 0.6rem 1.2rem;
        border-radius: 0.375rem;
        transition: all 0.3s ease;
    }

    .btn-outline-nude:hover {
        background-color: var(--nude-light);
        box-shadow: inset 0 0 0 1000px rgba(212,180,158,0.05);
    }

     .card {
        border: none;
        background-color: #fff;
        box-shadow: 0 4px 12px var(--card-shadow);
        border-radius: 0.75rem;
    }

    .card-header {
        background-color: var(--nude-accent);
        color: #fff;
        font-weight: 600;
        border-radius: 0.75rem 0.75rem 0 0;
        padding: 1rem;
    }

    .fade-in {
        animation: fadeIn 0.7s ease-in-out;
    }

    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style>")


<div class="container mt-5">\
    <h1 class="text-welcome fw-bold mb-4">Ticket Confirmation</h1>
    <div class="alert alert-info fade-in">
        <p>Your ticket <strong>#@Model.Id</strong> has been received.</p>
        <p>Service Type: <strong>@Model.ServiceType</strong></p>
    </div>
    <div class="alert alert-info fade-in">
        <i class="fas fa-clock me-2 text-primary"></i>
        Redirecting you to Incident in a few seconds...
    </div>

  
    @* <div class="card p-4 mb-5">
        <h5 class="text-welcome mb-3">What would you like to do next?</h5>
        <div class="d-flex gap-3">
            @* <a asp-action="Dashboard" class="btn btn-primary">Go to Dashboard</a> 
            <a href="@Url.Action("Dashboard", "Home", new { ticketId = ticketId })" class="btn btn-blue rounded-pill px-4">
                Go to Dashboard
            </a>
            <a href="@Url.Action("Create", "Home")" class="btn btn-outline-blue rounded-pill px-4">
                Create Another Ticket
            </a>

            @* <form asp-action="Incident" method="get">
        <input type="hidden" name="id" value="@Model.Id" />
        <button type="submit" class="btn btn-secondary">Report a New Incident</button>
    </form> 
        </div> *@

    </div>
</div>

<script>
    setTimeout(function () {
      window.location.href = '@Url.Action("Incident", "Home", new { tickid = Model.Id })';
    }, 5000);
</script>

@* @if (allIncidents != null && allIncidents.Any())
{
    <div class="mt-4">
        <form asp-controller="Home" asp-action="IncidentDetail" method="get">
            <label class="form-label fw-bold">Select an existing incident:</label>
            <select name="incidentId" class="form-select mb-3">
                @foreach (var incident in allIncidents)
                {
                    <option value="@incident.Id">
                        Incident #@incident.Id – Ticket #@incident.Ticket?.Id – @incident.State
                    </option>
                }
            </select>
            <button type="submit" class="btn btn-outline-primary">Open Selected Incident</button>
        </form>
    </div>
}
else
{
    <div class="mt-4 alert alert-warning">
        <p>No existing incidents found.</p>
    </div>
} *@
@* <form asp-action="Incident" method="get">
    <h1>Ticket submitted</h1>

    <p>Your ticket <strong>#@Model.Id</strong> has been received.</p>
    <p>Service Type: <strong>@Model.ServiceType</strong></p> 
    <div style="margin-top: 20px;">
        <a asp-action="Create" class="btn btn-primary">Create Another Ticket</a>
        <input type="hidden" name="id" value="@Model.Id" />
        <button type="submit" class="btn btn-secondary">Report an Incident</button>
    </div>
</form> *@


    @* <div class="mb-3" asp-action="WatchList">
        <label class="form-label">
            <i class="fas fa-lock me-2"></i>
            <a asp-action="WatchList" asp-route-tid="@Model.Id">
                Watch List
            </a>
        </label>
    </div> *@



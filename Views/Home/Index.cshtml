@model Ticket


@{
    
}


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />

@* <style>
    body {
        background-color: #f4f9ff;
        font-family: 'Segoe UI', sans-serif;
        color: #333;
    }

    .text-welcome {
        color: #1a73e8;
    }

    .btn-blue {
        background-color: #1a73e8;
        color: #fff;
        border: none;
        transition: background-color 0.3s ease;
    }

        .btn-blue:hover {
            background-color: #155ab6;
        }

    .form-control,
    .form-select {
        border-color: #1a73e8;
        border-radius: 0.25rem;
    }

    .form-label {
        font-weight: 600;
        color: #1a73e8;
    }

    .card {
        border: none;
        border-radius: 0.5rem;
        box-shadow: 0 0 10px rgba(0,0,0,0.05);
    }
    h2 {
        color: #1a73e8;
    }

    ul.arrow-list {
        list-style: none;
        padding-left: 1rem;
    }

    ul.arrow-list li::before {
        content: "➤";
        margin-right: 8px;
        color: #1a73e8;
        }      
</style> *@

<style>
    :root {
        --nude-bg: #fdf8f3;
        --nude-surface: #fff;
        --nude-accent: #d4b49e;
        --nude-accent-hover: #c6a086;
        --nude-text: #5a4a3f;
        --nude-muted: #a89b90;
        --nude-border: #e3d6cb;
        --nude-shadow: rgba(0, 0, 0, 0.06);
    }

    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    body {
        background-color: var(--nude-bg);
        font-family: 'Lora', serif;
        color: var(--nude-text);
    }

    .btn-nude {
        background-color: var(--nude-accent);
        color: #fff;
        padding: 0.6rem 1.2rem;
        border-radius: 0.375rem;
        font-size: 1rem;
        border: none;
        transition: background-color 0.3s ease, box-shadow 0.3s ease;
    }

        .btn-nude:hover {
            background-color: var(--btn-hover);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

    .btn-outline-nude {
        border: 2px solid var(--nude-primary);
        color: var(--nude-primary);
        background-color: transparent;
        padding: 0.6rem 1.2rem;
        border-radius: 0.375rem;
        transition: all 0.3s ease;
    }

        .btn-outline-nude:hover {
            background-color: var(--nude-light);
            box-shadow: inset 0 0 0 1000px rgba(212,180,158,0.05);
        }

    .card {
        border: 1px solid var(--nude-border);
        background-color: var(--nude-surface);
        box-shadow: 0 4px 12px var(--nude-shadow);
        border-radius: 0.75rem;
        color: var(--nude-text);
        transition: transform 0.3s ease;
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 16px var(--nude-shadow);
        }

    .card-header {
        background-color: var(--nude-accent);
        color: #fff;
        font-weight: 600;
        border-radius: 0.75rem 0.75rem 0 0;
        padding: 1rem;
    }

    .alert-info {
        background-color: #f1e6de;
        border-left: 4px solid var(--nude-accent);
        color: var(--nude-text);
        padding: 1rem;
        border-radius: 0.5rem;
    }

    .form-select {
        border-color: var(--nude-accent);
        background-color: #fff;
        color: var(--nude-text);
        border-radius: 0.375rem;
    }

    .text-welcome {
        color: var(--nude-accent);
        font-weight: 500;
        letter-spacing: 0.5px;
    }

    .fade-out {
        transition: opacity 0.4s ease;
        opacity: 0;
    }

    #selectedWatchers .list-group-item {
        background-color: var(--nude-surface);
        border: 1px solid var(--nude-border);
        color: var(--nude-text);
        border-radius: 2rem;
        padding: 0.5rem 1rem;
        margin-bottom: 0.5rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        #selectedWatchers .list-group-item:hover {
            background-color: var(--nude-accent-hover);
            color: #fff;
        }

    #searchBox::placeholder {
        color: var(--nude-muted);
        font-style: italic;
    }



</style>
<div class="container mt-4">
        <form asp-action="Create" method="post" enctype="multipart/form-data" id="ticketForm">
            <div class="container mt-4">
                <div class="mb-3">
                    <label asp-for="ServiceType" class="form-label fw-bold">* Service</label> <br />
                    <label class="form-text">(Try to be accurate selecting the right service, this will have impact on the resolution of your incident)</label><br />
                    <ul class="arrow-list text small mb-1">
                        <li>More information</li>
                    </ul>
                    <select class="form-select" asp-for="ServiceType">
                        <option disabled selected value="">Choose one...</option>
                    <option value="Local">Local</option>
                    <option value="Global">Global</option>
                    <option value="Support">Support</option>
                    </select>
                    <span asp-validation-for="ServiceType" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Impact" class="form-label fw-bold">Impact</label>
                    <ul class="arrow-list text small mb-1">
                        <li>More information</li>
                    </ul>
                    <select class="form-select" asp-for="Impact">
                        <option disabled selected value="">Choose one...</option>
                        <option value="1 - High">1 - High</option>
                        <option value="2 - Moderate">2 - Moderate</option>
                        <option value="3 - Low">3 - Low</option>
                    </select>
                    <span asp-validation-for="Impact" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="ShortDescription" class="form-label fw-bold">* Short Description</label>
                    <ul class="arrow-list text small mb-1">
                        <li>More information</li>
                    </ul>
                    <input asp-for="ShortDescription" type="text" class="form-control" />
                    <span asp-validation-for="ShortDescription" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Description" class="form-label fw-bold">Describe the issue</label>
                    <ul class="arrow-list text small mb-1">
                        <li>More information</li>
                    </ul>
                    <textarea asp-for="Description" class="form-control" rows="4"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label">
                        <i class="fas fa-paperclip me-2"></i>
                        <a href="#" onclick="document.getElementById('fileInput').click(); return false;">Attachments(optional)</a>
                    </label>
                    <input type="file" name="uploadedFile" id="fileInput" class="form-control mt-1" hidden />
                </div>

                @* <div class="mb-3" asp-action="WatchList">
                <label class="form-label">
                    <i class="fas fa-lock me-2"></i>
                    <a asp-action="WatchList" class="btn btn-outline-primary">
                        Watch List
                    </a>
                </label>
            </div> *@
                @* @if (ViewBag.Watchers != null && ((List<LoginModel>)ViewBag.Watchers).Any())
                {
                    <div class="mb-3">
                        <h2 class="text-welcome mb-4">Watchers available:</h2>
                        @foreach (var watcher in (List<LoginModel>)ViewBag.Watchers)
                        {
                            <label>
                                <input type="checkbox" name="selectedWatcherIds" value="@watcher.Id" />
                                @watcher.Name
                            </label>
                            <br />
                        }
                    </div>
                }
                else
                {
                    <p>@(((List<LoginModel>)ViewBag.Watchers)?.Count ?? 0) watchers loaded</p>

                    <p>No watchers available.</p>
                } *@
                @if (ViewBag.Watchers != null && ((List<LoginModel>)ViewBag.Watchers).Any())
                {
                     <h2 class="text-welcome mb-4">Watch List</h2>

                    <input type="text" id="searchBox" placeholder="Search watchers..." class="form-control mb-3" autocomplete="off" />

                    <div id="watcherList" class="row d-none">
                        @foreach (var watcher in (List<LoginModel>)ViewBag.Watchers ?? new List<LoginModel>())
                        {
                        <div class="watcher-item d-none col-md-4 mb-3" data-name="@watcher.Name" data-id="@watcher.Id">
                            <div class="card h-100 shadow-sm select-watcher" style="cursor: pointer;">
                                <div class="card-body text-center">
                                    <h5 class="card-title">@watcher.Name</h5>
                                </div>
                            </div>
                        </div>

                        }
                    </div>

               

                    <h4 class="mt-4 text-welcome">Selected Watchers:</h4>
                    <ul id="selectedWatchers" class="list-group"></ul>
                    <div id="hiddenInputs"></div>

                }
                else
                {
                    <p>@(((List<LoginModel>)ViewBag.Watchers)?.Count ?? 0) watchers loaded</p>

                    <p>No watchers available.</p>
                }



                <div class="text-center">
                    <div class="mb-5">
                        <button type="submit" class="btn btn-nude rounded-pill px-5" onclick="injectHiddenInputs()">Submit</button>
                    </div>
                </div>
            </div>

        </form>
</div>
<script>
    function injectHiddenInputs() {   
        const container = document.getElementById("hiddenInputs");
        container.innerHTML = ""; // Clear old inputs

        const selectedItems = document.querySelectorAll("#selectedWatchers li[data-id]");
        selectedItems.forEach(item => {
            const id = item.getAttribute("data-id");
            const input = document.createElement("input");
            input.type = "hidden";
            input.name = "SelectedWatcherIds";
            input.value = id;
            container.appendChild(input);
        });
    }
    document.addEventListener("DOMContentLoaded", function () {
        const searchBox = document.getElementById("searchBox");
        const watcherList = document.getElementById("watcherList");

        searchBox.addEventListener("input", function () {
            const filter = this.value.toLowerCase();
            const items = document.querySelectorAll(".watcher-item");
            let matches = 0;

            items.forEach(item => {
                const name = item.getAttribute("data-name").toLowerCase();
                const match = name.includes(filter) && filter !== "";
                item.classList.toggle("d-none", !match);
                if (match) matches++;
            });

            watcherList.classList.toggle("d-none", matches === 0);
        });

        // 👇 Use event delegation for clicks on select-watcher cards
        watcherList.addEventListener("click", function (e) {
            const card = e.target.closest(".select-watcher");
            if (!card) return;

            const item = card.closest(".watcher-item");
            const name = item.getAttribute("data-name");
            const id = item.getAttribute("data-id");

            if (!document.querySelector(`#selectedWatchers li[data-id='${id}']`)) {
                const li = document.createElement("li");
                li.className = "list-group-item";
                li.setAttribute("data-id", id);
                li.textContent = name;
                document.getElementById("selectedWatchers").appendChild(li);
            }
        });
    });
     document.getElementById("selectedWatchers").addEventListener("dblclick", function (e) {
        const item = e.target.closest("li");
        if (item && item.hasAttribute("data-id")) {
            item.classList.add("fade-out");
            setTimeout(() => item.remove(), 400);

        }   
    });

</script>
